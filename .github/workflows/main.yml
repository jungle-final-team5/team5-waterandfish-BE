name: Deploy Backend to EC2 (No Appleboy)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. .env.production 파일 생성 (Secrets에서)
      - name: Create .env.production
        run: |
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env.production
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env.production
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.production
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.production
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env.production
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> .env.production
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=60" >> .env.production
          echo "ALGORITHM=HS256" >> .env.production
          echo "GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}" >> .env.production
          echo "KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}" >> .env.production
          echo "CORS_ORIGINS=[\"http://13.209.142.150\"]" >> .env.production
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env.production

      # 3. AWS 인증 정보 설정 (ECR 접근을 위해 필요)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 4. ECR에 Docker 로그인
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com

      # 5. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t waterandfish-backend:latest .

      # 6. ECR에 push할 태그 추가
      - name: Tag Docker image for ECR
        run: |
          docker tag waterandfish-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/waterandfish-backend:latest

      # 7. Docker 이미지를 ECR에 push
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/waterandfish-backend:latest

# 이 워크플로우는 main 브랜치에 push/PR될 때마다 실행되며,
# 백엔드 Docker 이미지를 빌드해서 ECR에 업로드합니다.
# EC2 등에서 이미지를 pull해서 배포하는 방식으로 연동하면 됩니다.